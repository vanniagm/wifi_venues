strip.text = element_text(face = "bold", size = 12, color = "black"),
legend.position = "bottom",
legend.justification = "top",
legend.box = "horizontal",
legend.background = element_blank(),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
geom_rug(aes(color = outcome)) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1")
table(fluH7N9_china_2013_gather$Group)
head(fluH7N9_china_2013)
head(fluH7N9_china_2013_backup)
fluH7N9_china_2013<-fluH7N9_china_2013_backup
fluH7N9_china_2013$age[which(fluH7N9_china_2013$age=="?")]<-NA
# create a new column with case ID
fluH7N9_china_2013$case_id<-paste("case",fluH7N9_china_2013$case_id,sep="_")
#freuqent outbreaks provinces
table(fluH7N9_china_2013$province)
fluH7N9_china_2013_gather$Group<-factor(fluH7N9_china_2013_gather$Group,levels=c("date_of_onset","date_of_hospitalisation","date_of_outcome"))
table(fluH7N9_china_2013_gather$Group)
fluH7N9_china_2013<-fluH7N9_china_2013_backup
fluH7N9_china_2013$age[which(fluH7N9_china_2013$age=="?")]<-NA
# create a new column with case ID
fluH7N9_china_2013$case_id<-paste("case",fluH7N9_china_2013$case_id,sep="_")
#freuqent outbreaks provinces
table(fluH7N9_china_2013$province)
head(fluH7N9_china_2013)
fluH7N9_china_2013_gather$Group<-factor(fluH7N9_china_2013_gather$Group,levels=c("date_of_onset","date_of_hospitalisation","date_of_outcome"))
head(fluH7N9_china_2013_gather)
table(fluH7N9_china_2013_gather$Group)
fluH7N9_china_2013<-fluH7N9_china_2013_backup
fluH7N9_china_2013$age[which(fluH7N9_china_2013$age=="?")]<-NA
# create a new column with case ID
fluH7N9_china_2013$case_id<-paste("case",fluH7N9_china_2013$case_id,sep="_")
#freuqent outbreaks provinces
table(fluH7N9_china_2013$province)
library(dplyr)
library(plyr)
#gather for ggplot
fluH7N9_china_2013_gather <- fluH7N9_china_2013 %>%
gather(Group, Date, date_of_onset:date_of_outcome)
table(fluH7N9_china_2013_gather$Group)
fluH7N9_china_2013_gather$Group<-factor(fluH7N9_china_2013_gather$Group,levels=c("date_of_onset","date_of_hospitalisation","date_of_outcome"))
head(fluH7N9_china_2013_gather)
fluH7N9_china_2013_gather$province<-mapvalues(fluH7N9_china_2013_gather$province,from=c("Anhui","Beijing","Fujian","Guangdong","Hebei","Henan","Hunan","Jiangxi","Shandong","Taiwan"),to=rep("Other",10))
sum(is.na(fluH7N9_china_2013_gather$gender))
levels(fluH7N9_china_2013_gather$gender)<-c(levels(fluH7N9_china_2013_gather$gender),"unknown")
fluH7N9_china_2013_gather$gender[is.na(fluH7N9_china_2013_gather$gender)]<-"unknown"
table(fluH7N9_china_2013_gather$gender)
fluH7N9_china_2013_gather$province <- factor(fluH7N9_china_2013_gather$province, levels = c("Jiangsu", "Shanghai", "Zhejiang", "Other"))
table(fluH7N9_china_2013_gather$province)
gral_theme <- function(base_size = 12, base_family = "sans"){
theme_minimal(base_size = base_size, base_family = base_family) +
theme(
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size = 14),
panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
strip.background = element_rect(fill = "lightgrey", color = "grey", size = 1),
strip.text = element_text(face = "bold", size = 12, color = "black"),
legend.position = "bottom",
legend.justification = "top",
legend.box = "horizontal",
legend.background = element_blank(),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
geom_rug(aes(color = outcome)) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1")
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
labs(
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1")
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1")
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50")
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_fill_brewer(palette="Set1")
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), fill = outcome)) +
stat_density2d(aes(alpha = ..level..), geom = "polygon") +
geom_jitter(aes(color = outcome, shape = gender), size = 1.5) +
labs(
fill = "Outcome",
color = "Outcome",
alpha = "Level",
shape = "Gender",
x = "Date in 2013",
y = "Age",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Dataset from 'outbreaks' package (Kucharski et al. 2014)",
caption = ""
) +
facet_grid(Group ~ province) +
gral_theme() +
scale_shape_manual(values = c(15, 16, 17)) +
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1")
library(caret)
install.packages('caret')
library(carte)
library(caret)
?createDataPartition
if (!require("outbreaks")) install.packages("outbreaks")
library(outbreaks)
#backup
fluH7N9_china_2013_backup<-fluH7N9_china_2013
# convert ? to NAs
fluH7N9_china_2013$age[which(fluH7N9_china_2013$age=="?")]<-NA
# create a new column with case ID
fluH7N9_china_2013$case_id<-paste("case",fluH7N9_china_2013$case_id,sep="_")
#freuqent outbreaks provinces
table(fluH7N9_china_2013$province)
library(dplyr)
library(plyr)
#gather for ggplot
fluH7N9_china_2013_gather <- fluH7N9_china_2013 %>%
gather(Group, Date, date_of_onset:date_of_outcome)
fluH7N9_china_2013_gather$Group<-factor(fluH7N9_china_2013_gather$Group,levels=c("date_of_onset","date_of_hospitalisation","date_of_outcome"))
fluH7N9_china_2013_gather$province<-mapvalues(fluH7N9_china_2013_gather$province,from=c("Anhui","Beijing","Fujian","Guangdong","Hebei","Henan","Hunan","Jiangxi","Shandong","Taiwan"),to=rep("Other",10))
sum(is.na(fluH7N9_china_2013_gather$gender))
levels(fluH7N9_china_2013_gather$gender)<-c(levels(fluH7N9_china_2013_gather$gender),"unknown")
fluH7N9_china_2013_gather$gender[is.na(fluH7N9_china_2013_gather$gender)]<-"unknown"
table(fluH7N9_china_2013_gather$gender)
#rearrrange order in provinces
fluH7N9_china_2013_gather$province <- factor(fluH7N9_china_2013_gather$province, levels = c("Jiangsu", "Shanghai", "Zhejiang", "Other"))
table(fluH7N9_china_2013_gather$province)
library(tidyr)
#gather for ggplot
fluH7N9_china_2013_gather <- fluH7N9_china_2013 %>%
gather(Group, Date, date_of_onset:date_of_outcome)
fluH7N9_china_2013_gather$Group<-factor(fluH7N9_china_2013_gather$Group,levels=c("date_of_onset","date_of_hospitalisation","date_of_outcome"))
fluH7N9_china_2013_gather$province<-mapvalues(fluH7N9_china_2013_gather$province,from=c("Anhui","Beijing","Fujian","Guangdong","Hebei","Henan","Hunan","Jiangxi","Shandong","Taiwan"),to=rep("Other",10))
sum(is.na(fluH7N9_china_2013_gather$gender))
levels(fluH7N9_china_2013_gather$gender)<-c(levels(fluH7N9_china_2013_gather$gender),"unknown")
fluH7N9_china_2013_gather$gender[is.na(fluH7N9_china_2013_gather$gender)]<-"unknown"
table(fluH7N9_china_2013_gather$gender)
fluH7N9_china_2013_gather$province <- factor(fluH7N9_china_2013_gather$province, levels = c("Jiangsu", "Shanghai", "Zhejiang", "Other"))
table(fluH7N9_china_2013_gather$province)
names(fluH7N9_china_2013_gather)
fluH7N9_china_2013_gather2<-fluH7N9_china_2013_gather[,-4]%>%gather(group_2,value,gender:province)
head(fluH7N9_china_2013_gather2)
tail(fluH7N9_china_2013_gather2)
fluH7N9_china_2013_gather2$value<-mapvalues(fluH7N9_china_2013_gather2$value,from=c("m","f","unknown","Other"),to=c("Male","Female","Unknown gender","Other province"))
tail(fluH7N9_china_2013_gather2)
fluH7N9_china_2013_gather2$value<-as.factor(fluH7N9_china_2013_gather2$value)
str(fluH7N9_china_2013_gather2$value)
levels(fluH7N9_china_2013_gather2$value)
fluH7N9_china_2013_gather2$value<-factor(fluH7N9_china_2013_gather2$value,levels=c("Female","Male","Unknown gender","Jiangsu", "Shanghai", "Zhejiang", "Other province"))
levels(fluH7N9_china_2013_gather2$value)
p1<-ggplot(data=fluH7N9_china_2013_gather2,aes(x=value,fill=outcome,color=outcome))+
geom_bar(alpha=.7,size=1)+gral_theme+
scale_fill_brewer(palette="Set1", na.value = "grey50") +
scale_color_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "",
y = "Count",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Gender and Province numbers of flu cases",
caption = ""
)
p2<-ggplot(data=fluH7N9_china_2013_gather,aes(x=as.numeric(age),fill=outcome,color=outcome))+
geom_density(alpha=.4,size=1)+
gral_theme+
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "Age",
y = "Density",
title = "",
subtitle = "Age distribution of flu cases",
caption = ""
)
library(gridExtra)
library(grid)
grid.arrange(p1, p2, ncol = 2)
library(ggplot2)
p1<-ggplot(data=fluH7N9_china_2013_gather2,aes(x=value,fill=outcome,color=outcome))+
geom_bar(alpha=.7,size=1)+gral_theme+
scale_fill_brewer(palette="Set1", na.value = "grey50") +
scale_color_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "",
y = "Count",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Gender and Province numbers of flu cases",
caption = ""
)
p2<-ggplot(data=fluH7N9_china_2013_gather,aes(x=as.numeric(age),fill=outcome,color=outcome))+
geom_density(alpha=.4,size=1)+
gral_theme+
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "Age",
y = "Density",
title = "",
subtitle = "Age distribution of flu cases",
caption = ""
)
library(gridExtra)
library(grid)
grid.arrange(p1, p2, ncol = 2)
gral_theme <- function(base_size = 12, base_family = "sans"){
theme_minimal(base_size = base_size, base_family = base_family) +
theme(
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size = 14),
panel.grid.major = element_line(color = "grey"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "aliceblue"),
strip.background = element_rect(fill = "lightgrey", color = "grey", size = 1),
strip.text = element_text(face = "bold", size = 12, color = "black"),
legend.position = "bottom",
legend.justification = "top",
legend.box = "horizontal",
legend.background = element_blank(),
panel.border = element_rect(color = "grey", fill = NA, size = 0.5)
)
}
p1<-ggplot(data=fluH7N9_china_2013_gather2,aes(x=value,fill=outcome,color=outcome))+
geom_bar(alpha=.7,size=1)+gral_theme+
scale_fill_brewer(palette="Set1", na.value = "grey50") +
scale_color_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "",
y = "Count",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Gender and Province numbers of flu cases",
caption = ""
)
p2<-ggplot(data=fluH7N9_china_2013_gather,aes(x=as.numeric(age),fill=outcome,color=outcome))+
geom_density(alpha=.4,size=1)+
gral_theme+
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "Age",
y = "Density",
title = "",
subtitle = "Age distribution of flu cases",
caption = ""
)
library(gridExtra)
library(grid)
grid.arrange(p1, p2, ncol = 2)
p1<-ggplot(data=fluH7N9_china_2013_gather2,aes(x=value,fill=outcome,color=outcome))+
geom_bar(alpha=.7,size=1)+gral_theme()+
scale_fill_brewer(palette="Set1", na.value = "grey50") +
scale_color_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "",
y = "Count",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Gender and Province numbers of flu cases",
caption = ""
)
p2<-ggplot(data=fluH7N9_china_2013_gather,aes(x=as.numeric(age),fill=outcome,color=outcome))+
geom_density(alpha=.4,size=1)+
gral_theme()+
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "Age",
y = "Density",
title = "",
subtitle = "Age distribution of flu cases",
caption = ""
)
library(gridExtra)
library(grid)
grid.arrange(p1, p2, ncol = 2)
p1<-ggplot(data=fluH7N9_china_2013_gather2,aes(x=value,fill=outcome,color=outcome))+
geom_bar(position="dodge",alpha=.7,size=1)+gral_theme()+
scale_fill_brewer(palette="Set1", na.value = "grey50") +
scale_color_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "",
y = "Count",
title = "2013 Influenza A H7N9 cases in China",
subtitle = "Gender and Province numbers of flu cases",
caption = ""
)
p2<-ggplot(data=fluH7N9_china_2013_gather,aes(x=as.numeric(age),fill=outcome,color=outcome))+
geom_density(alpha=.4,size=1)+
gral_theme()+
scale_color_brewer(palette="Set1", na.value = "grey50") +
scale_fill_brewer(palette="Set1", na.value = "grey50") +
labs(
color = "",
fill = "",
x = "Age",
y = "Density",
title = "",
subtitle = "Age distribution of flu cases",
caption = ""
)
library(gridExtra)
library(grid)
grid.arrange(p1, p2, ncol = 2)
head(fluH7N9_china_2013_gather)
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), color = outcome)) +
geom_point(aes(shape = gender), size = 1.5, alpha = 0.6) +
geom_path(aes(group = case.ID)) +
facet_wrap( ~ province, ncol = 2) +
gral_theme()
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), color = outcome)) +
geom_point(aes(shape = gender), size = 1.5, alpha = 0.6) +
facet_wrap( ~ province, ncol = 2) +
gral_theme()
head(fluH7N9_china_2013_gather)
head(fluH7N9_china_2013_gather[fluH7N9_china_2013_gather$case_id=="case_1",])
head(fluH7N9_china_2013)
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), color = outcome)) +
geom_point(aes(shape = gender), size = 1.5, alpha = 0.6) +geom_path()+
facet_wrap( ~ province, ncol = 2) +
gral_theme()
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), color = outcome)) +
geom_point(aes(shape = gender), size = 1.5, alpha = 0.6) +geom_path(aes(group=case.ID))+
facet_wrap( ~ province, ncol = 2) +
gral_theme()
ggplot(data = fluH7N9_china_2013_gather, aes(x = Date, y = as.numeric(age), color = outcome)) +
geom_point(aes(shape = gender), size = 1.5, alpha = 0.6) +geom_path(aes(group=case_id))+
facet_wrap( ~ province, ncol = 2) +
gral_theme()
R.version()
R.version
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
install.packages("devtools")
library(devtools)
install.packages('ggplot2')
install.packages('lubridate')
install.packages('dplyr')
install.packages('plyr')
install.packages('reshape')
library('plotly')
devtools::install_github("ropensci/plotly")
install.packages('datasets')
install.packages("datasets")
install.packages("datasets")
library(datasets)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library('datasets')
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
library('data')
data("diamonds")
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
+         mode = "markers", color = carat, size = carat)
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),mode = "markers", color = carat, size = carat)
str(diamonds)
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),mode = "markers", color = carat, size = carat)
str(d)
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)), size = 4) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
(gg <- ggplotly(p))
devtools::install_github('hadley/ggplot2')
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)), size = 4) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
(gg <- ggplotly(p))
library(slidify)
slidify(Index.html)
setwd("/home/vanniagm/drop/Dropbox/DataScience/Klustera/")
rmarkdown::render("Businesses_wifi_visitors.Rmd")
rmarkdown::render("Businesses_wifi_visitors.Rmd")
rmarkdown::render("Businesses_wifi_visitors.Rmd")
View(traints)
View(testts)
View(testts)
head(results)
results<-data.frame(rf = predict(modelfinal_rf, newdata = test))
head(results)
write.csv(results,file="files/results.csv")
rmarkdown::render("Businesses_wifi_visitors.Rmd")
head(res)
rmarkdown::render("Businesses_wifi_visitors.Rmd")
rmarkdown::render("Businesses_wifi_visitors.Rmd")
